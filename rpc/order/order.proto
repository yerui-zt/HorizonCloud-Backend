syntax = "proto3";

package order;
option go_package="./order";

message CreateVMDeployOrderReq {
  int64 uid =1;
  int64 vm_group_id =2;
  int64 plan_id =3;
  string image =4;
  string billing_cycle =5;
  string hostname =6;
}

message CreateVMDeployOrderResp {
  string order_no =1;
}

message OrderDetailItem {
  int64 id =1;
  int64 order_id =2;
  string name =3;
  string content =4;
  int64 quantity =5;
  int64 amount =6;
}

message GetOrderDetailItemReq {
  string order_no =1;
}

message GetOrderDetailItemResp {
  int64 id =1;
  string create_time =2;
  string update_time =3;
  string due_date =4;
  string order_no =5;
  int64 user_id =6;
  int64 total_amount =7;
  string status =8;
  repeated OrderDetailItem items =9;
}

message PayOrderReq {
  string order_no =1;
  string method =2;
}
message PayOrderResp {
  string url =1;
}

message OrderPaymentMethod {
  string name =1;
  string type =2;
}
message GetOrderPaymentMethodReq {
  string order_no =1;
}
message GetOrderPaymentMethodResp {
  repeated OrderPaymentMethod methods =1;
}

message FullFillOrderReq {
  string order_no =1;
  string callback_no =2;
  string method =3;
}
message FullFillOrderResp {
  bool success =1;
}


service OrderService {
  // 创建虚拟机部署订单
  rpc CreateVMDeployOrder(CreateVMDeployOrderReq) returns (CreateVMDeployOrderResp);
  // 获取订单详情
  rpc GetOrderDetailItem(GetOrderDetailItemReq) returns (GetOrderDetailItemResp);
  // 支付订单
  rpc PayOrder(PayOrderReq) returns (PayOrderResp);
  // 获取订单支付方式
  rpc GetOrderPaymentMethod(GetOrderPaymentMethodReq) returns (GetOrderPaymentMethodResp);
  // 订单支付成功后的回调
  rpc FullFillOrder(FullFillOrderReq) returns (FullFillOrderResp);
}