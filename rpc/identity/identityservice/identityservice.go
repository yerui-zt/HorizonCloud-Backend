// Code generated by goctl. DO NOT EDIT.
// Source: identity.proto

package identityservice

import (
	"context"

	"HorizonX/rpc/identity/identity"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeclineJWTReq  = identity.DeclineJWTReq
	DeclineJWTResp = identity.DeclineJWTResp
	IssueJWTReq    = identity.IssueJWTReq
	IssueJWTResp   = identity.IssueJWTResp
	VerifyJWTReq   = identity.VerifyJWTReq
	VerifyJWTResp  = identity.VerifyJWTResp

	IdentityService interface {
		IssueJWT(ctx context.Context, in *IssueJWTReq, opts ...grpc.CallOption) (*IssueJWTResp, error)
		VerifyJWT(ctx context.Context, in *VerifyJWTReq, opts ...grpc.CallOption) (*VerifyJWTResp, error)
		DeclineJWT(ctx context.Context, in *DeclineJWTReq, opts ...grpc.CallOption) (*DeclineJWTResp, error)
	}

	defaultIdentityService struct {
		cli zrpc.Client
	}
)

func NewIdentityService(cli zrpc.Client) IdentityService {
	return &defaultIdentityService{
		cli: cli,
	}
}

func (m *defaultIdentityService) IssueJWT(ctx context.Context, in *IssueJWTReq, opts ...grpc.CallOption) (*IssueJWTResp, error) {
	client := identity.NewIdentityServiceClient(m.cli.Conn())
	return client.IssueJWT(ctx, in, opts...)
}

func (m *defaultIdentityService) VerifyJWT(ctx context.Context, in *VerifyJWTReq, opts ...grpc.CallOption) (*VerifyJWTResp, error) {
	client := identity.NewIdentityServiceClient(m.cli.Conn())
	return client.VerifyJWT(ctx, in, opts...)
}

func (m *defaultIdentityService) DeclineJWT(ctx context.Context, in *DeclineJWTReq, opts ...grpc.CallOption) (*DeclineJWTResp, error) {
	client := identity.NewIdentityServiceClient(m.cli.Conn())
	return client.DeclineJWT(ctx, in, opts...)
}
