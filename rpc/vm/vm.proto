syntax = "proto3";

package vm;
option go_package="./vm";

//message VMGroup{
//    int64 id = 1;
//    string name = 2;
//    string region = 3;
//}
//
//message GetAllVMGroupsResp{
//    repeated VMGroup vm_groups = 1;
//}
//
//
//message GetVMGroupByRegionReq{
//    string region = 1;
//}
//
//message GetVMGroupByRegionResp{
//    repeated VMGroup groups = 1;
//}
//
//message VMPlan{
//    int64 id = 1;
//    string name = 2;
//    int64 stock = 3;
//    int64 vcpu = 4;
//    int64 memory = 5;
//    int64 disk = 6;
//    int64 data_transfer = 7;
//    int64 bandwidth = 8;
//    int64 ipv4_num = 9;
//    int64 ipv6_num = 10;
//    int64 monthly_price = 11;
//    int64 quarterly_price = 12;
//    int64 semi_annually_price = 13;
//    int64 annually_price = 14;
//}
//
//message GetVMPlanByGroupIdReq{
//    int64 group_id = 1;
//}
//
//message GetVMPlanByGroupIdResp{
//    repeated VMPlan plans = 1;
//}
//
//message VMImage{
//    int64 id = 1;
//    string name = 2;
//    string release = 3;
//}
//
//message GetImageResp{
//    repeated VMImage images = 1;
//}

message DeployVMInstanceReq{
    string billing_cycle = 1;
    string hostname = 2;
    int64 image_id = 3;
    int64 group_id = 4;
    int64 plan_id = 5;
    int64 user_id = 6;
    int64 ssh_key_id = 7;
}
message DeployVMInstanceResp{
    string instance_id = 1;
}

message IPv4Address {
    string ip = 1;
    string gateway = 2;
}
message IPv6Address {
    string ip = 1;
    string gateway = 2;
}

message GetFreeIPv4Req{
    int64 hypervisor_node_id =1;
    int64 num = 2;
}
message GetFreeIPv4Resp{
    repeated IPv4Address ipv4s = 1;
}
message GetFreeIPv6Req{
    int64 hypervisor_node_id =1;
    int64 num = 2;
}
message GetFreeIPv6Resp{
    repeated IPv6Address ipv6s = 1;
}


service VMService {
//    rpc GetAllVMGroups(GetAllVMGroupsResp) returns (GetAllVMGroupsResp);
//    rpc GetVMGroupByRegion(GetVMGroupByRegionReq) returns (GetVMGroupByRegionResp);
//    rpc GetVMPlanByGroupId(GetVMPlanByGroupIdReq) returns (GetVMPlanByGroupIdResp);
//    rpc GetImage(GetImageResp) returns (GetImageResp);

    rpc DeployVMInstance(DeployVMInstanceReq) returns (DeployVMInstanceResp);
//    rpc GetFreeIPv4(GetFreeIPv4Req) returns (GetFreeIPv4Resp);
//    rpc GetFreeIPv6(GetFreeIPv6Req) returns (GetFreeIPv6Resp);
}