syntax = "v1"

type (
    LoginReq {
        Email string `json:"email" validate:"required,email"`
        Password string `json:"password" validate:"required"`
    }
    LoginResp struct {
        Token string `json:"token"`
    }

    LoginOutResp struct {
        Success bool `json:"success"`
    }

    RegisterReq {
        Email string `json:"email" validate:"required,email"`
        Password string `json:"password" validate:"required,min=8,max=20"`
        FirstName  string   `json:"first_name" validate:"required"`
        LastName   string   `json:"last_name" validate:"required"`
        Country    string   `json:"country" validate:"required,iso3166_1_alpha3"`
        Address    string   `json:"address" validate:"required"`
        AffBy      int64    `json:"aff_by"`
    }
    RegisterResp {
        Token string `json:"token"`
    }

)

// 公共接口，无需鉴权
@server (
    prefix: /api/user
    group: user
)
service horizonx-api {
    @handler login
    post /login (LoginReq) returns (LoginResp)

    @handler register
    post /register (RegisterReq) returns (RegisterResp)
}

// 需要鉴权的接口
@server (
    jwt: Jwt
    prefix: /api/user
    middleware: AuthMiddleware
    group: user
)
service horizonx-api {
    @handler logout
    post /logout returns (LoginOutResp)
}
